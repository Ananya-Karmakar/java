//bank account problem

public class bankaccount {
    String accountholder;
    int acnum;
    int balance;
    public bankaccount(String accountholder,int acnum,int balance){
        this.accountholder = accountholder;
        this.acnum = acnum;
        this.balance = balance;

    }
    public void deposit(int val){
        balance=balance+val;
        System.out.println("Deposit: "+val);
        System.out.println("new balance"+balance);
    }
    public void withdraw(int val){
        if(val > balance){
            System.out.println("Not sufficient balance to withdraw");
            return;
        }
            balance=balance-val;
            System.out.println("Withdraw: "+val);
            System.out.println("new balance: "+balance);
    }
    void display(){
        System.out.println("Account holder: "+ accountholder);
        System.out.println("Account number: "+acnum);
        System.out.println("Balance: "+ balance);

    }
    public static void main(String[] args) {
        bankaccount b = new bankaccount("Ananya", 1234, 5000);
        b.display();
        b.deposit(300);
       b.withdraw(500);
        


    }
}

//book problem
public class book {
    String title;
    String author;
    float price;
    public book(String title,String author,float price){
        this.title = title;
        this.author = author;
        this.price = price;
    }
    book(book b){
        this.title = b.title;
        this.author = b.author;
        this.price = b.price;
    }
    void display(){
        System.out.println("Title: "+ title);
        System.out.println("Author: "+ author);
        System.out.println("Price: "+ price);
    }
    public static void main(String[] args) {
        book b = new book("Java programming","James Gosling",30.5f);
        System.out.println("Book details: ");
        book b1 = new book(b);
        b.display();
        System.out.println();
        System.out.println("Copied book details: ");
        b1.display();
    }
}


//inheritance example code

import java.security.Principal;

class student{
    void speak(){
        System.out.println("Yes students are public speakers");
    }
}
class teacher extends student{
    void teach(){
        System.out.println("yes they are teachers");
    }
}
class principle extends teacher{
    void manage(){
        System.out.println("Principle ma'am");
    }
}
class topper extends student{
    void read(){
        System.out.println("Students are reading");
    }
}
public class inheritanceex {
    
    public static void main(String[] args) {
        teacher t = new teacher();
        principle p = new principle();
        topper to = new topper();
        t.speak();
        t.teach();
        p.speak();
        to.speak();
        to.read();
    }
}


//constructor example

public class program1{
    String name;
    int num;
    //A constructor is a special method that is used to initialize the object
    //It is automatically create when the object is called
    //1. Same name as class
    //2. No return type, called automatically
    //4.Parametrized
    //5.Overloading is possible
    /*
     * types-
     * default constructor and parameterized constructor
     */
    program1(){
        //System.out.println("Hi welcome");
        //default constructor
        name = "ananya";
        num = 123456789;
    }
    //Parameterized constructor
    public program1(String a, int b){
        name = a;
        num=b;
    }
    void show(){
        System.out.println(name+" " + num);
    }
    public static void main(String[] args) {
        program1 obj = new program1();
        program1 object = new program1("ananya",123);
        System.out.println(obj);
        System.out.println(object);
        obj.show();
        object.show();
    }
}
//constructor allows method overloading


//student problem

public class student {
    String name;
    int roll;
    String grade;
    public student(String name,int roll,String grade){
        this.name = name;
        this.roll = roll;
        this.grade = grade;
    }
    void display(){
        System.out.println("Name: " + name);
        System.out.println("Roll number: "+roll);
        System.out.println("Grade: "+grade);
    }
    public static void main(String[] args) {
        student s1 = new student("Ananya", 78, "Ex");
        System.out.println("Student details: ");
        s1.display();
    }
}





