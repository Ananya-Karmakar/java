MCQ:

1. (a)
2. (b)
3. (a)
4. (b)
5. (c)
6. (b)
7. (d)
8. (b)
9. (b)
10. (b)
11. (d)
12. (d)
13. (b)
14. (d)
15. (d)
16. (b)
17. (a)
18. (a)
19. (a)
20. (a)

CODING:
1) Sum of digits using recursion.

import java.util.*;
public class Mocktest1 {
    public static int sum(int n){
        if(n==0){
            return 0;
        }
        return (n% 10) + sum(n/10);
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter the digits: ");
        int num = sc.nextInt();
        int result = sum(num);
        System.out.println("The sum of the digits is: "+ result);
    }
}

2) Check whether the string is palindrome or not.

import java.util.*;
public class Mocktest2 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter the string: ");
        String str = sc.nextLine();
        String rev = "";
        for(int i=str.length()-1;i>=0;i--){
            rev = rev + str.charAt(i);
        }
        if(str.toLowerCase().equals(rev.toLowerCase())){
            System.out.println("String is palindrome");
        }else{
            System.out.println("String is not palindrome");
        }
    }
}
